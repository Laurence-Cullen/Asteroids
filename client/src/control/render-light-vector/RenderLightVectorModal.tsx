import React, {useState} from "react";
import {Modal} from "../../framework/modal/Modal";
import {LightCurveData, LightCurveModal} from "./LightCurveModal";
import {useControls} from "../control-context/ControlContext";

import "./RenderLightCurveModal.scss";

const LIGHT_CURVE_ENDPOINT = "https://asteroids-server-3hq677ff5q-nw.a.run.app/light_curve";

// const sampleLightCurve = [0.8479022319944776, 0.8479533658885793, 0.8479022319944776, 0.8472374913711553, 0.8473653261064097, 0.8480812006238335, 0.8474164600005113, 0.8488482090353591, 0.8503566589113594, 0.8515583054227495, 0.8518139748932579, 0.8510981003758341, 0.848515838723698, 0.8500242885996984, 0.8494618157645796, 0.8502288241761051, 0.8507401631171222, 0.8525554163577327, 0.8535013933986143, 0.8531690230869532, 0.8540127323396314, 0.8531690230869532, 0.8512770690051901, 0.8500242885996984, 0.8501776902820034, 0.8512003681640375, 0.8510981003758341, 0.8537059289750211, 0.8529900544575972, 0.8543195357042416, 0.8553422135862757, 0.8585125150205813, 0.8589982870145476, 0.8617595172960397, 0.86117147751387, 0.8630634315956331, 0.8616828164548871, 0.8650576534655997, 0.8655178585125151, 0.8670518753355662, 0.8668729067062102, 0.8670007414414644, 0.8670007414414644, 0.8664382686063458, 0.8659524966123795, 0.8659013627182778, 0.8659524966123795, 0.8690460972055327, 0.8689182624702784, 0.8729067062102115, 0.8725232020044487, 0.8700943420346177, 0.8709124843402449, 0.8694551683583464, 0.8717306266458722, 0.8707590826579398, 0.8731368087336692, 0.8766394804796359, 0.8790939073965178, 0.8799631835962468, 0.8806534911666198, 0.8806023572725181, 0.8737504154628896, 0.8713215554930586, 0.8768440160560428, 0.8796052463375348, 0.8826477130365863, 0.888425843070079, 0.8900365607342827, 0.8881701735995705, 0.8925165545982154, 0.8926188223864189, 0.8880679058113671, 0.8897041904226216, 0.8925165545982154, 0.8952266509856058, 0.8947920128857413, 0.8957891238207246, 0.8988827244138777, 0.899010559149132, 0.8992917955666914, 0.899700866719505, 0.8986014879963183, 0.8987293227315726, 0.9035870426712346, 0.9024876639480479, 0.9030757037302176, 0.9028456012067599, 0.9073709508347608, 0.9086492981873034, 0.9101577480633037, 0.9157057755733388, 0.9199754557308312, 0.9230690563239844, 0.9233502927415438, 0.9248331756704932, 0.927798941528392, 0.9311737785391047, 0.936312734896326, 0.939968808324598, 0.9434203461764631, 0.9458492061462941, 0.9460793086697518, 0.9460793086697518, 0.9501700201978882, 0.956101551913686, 0.9588627821951781, 0.9609848388003989, 0.9651266842226369, 0.9658681256871117, 0.9693963643801293, 0.9723365632909774, 0.9737171784317235, 0.97241326413213, 0.9758136680898933, 0.9747909902078593, 0.9736404775905709, 0.9768874798660292, 0.9802111829826401, 0.9743819190550457, 0.9763761409250121, 0.9767085112366732, 0.9777823230128091, 0.9795720093063687, 0.9849155012399969, 0.9871909595275228, 0.986117147751387, 0.9863216833277938, 0.9859126121749802, 0.9923043489376934, 0.9901311584383709, 0.9937872318666428, 0.9912561041086084, 0.9919975455730832, 0.9942474369135581, 0.9960626901541687, 0.99340372766088, 0.9966507299363383, 0.9969575333009485, 0.9967274307774908, 1.0, 0.9959092884718636, 0.9972387697185079, 0.9960882571012195, 0.9953468156367448, 0.9963439265717281, 0.9939917674430496, 0.9909237337969473, 0.9886994094035231, 0.9870631247922685, 0.9838928233579628, 0.9832536496816915, 0.9805179863472503, 0.9754812977782323, 0.976401707872063, 0.9727712013908419, 0.9678623475570782, 0.9603712320711784, 0.9614961777414159, 0.9614194769002633, 0.9561782527548386, 0.9546698028788383, 0.9519852734384987, 0.9439061181704292, 0.9412727226241915, 0.9344719147086646, 0.9269040983816123, 0.9194129828957124, 0.9178022652315087, 0.915680208626288, 0.9136348528622197, 0.9077544550405237, 0.9036126096182855, 0.904226216347506, 0.8985759210492675, 0.8951499501444532, 0.8961214941323856, 0.8934369646920461, 0.887377598240994, 0.8816761690486539, 0.8839771942832306, 0.8809347275841791, 0.8843095645948917, 0.8833635875540101, 0.8805512233784164, 0.8784291667731956, 0.8771252524736022, 0.8849743052182139, 0.8825454452483829, 0.8888604811699435, 0.892235318180656, 0.8931812952215376, 0.893104594380385, 0.8944340756270294, 0.8923631529159103, 0.8947920128857413, 0.9023853961598446, 0.9000843709252678, 0.9022831283716412, 0.909595275228185, 0.916370516196661, 0.9146063968501521, 0.9159103111497456, 0.918083501649068, 0.9201544243601871, 0.9293073914043924, 0.9268273975404597, 0.9295119269807992, 0.9321964564211388, 0.9330401656738169, 0.9353411909083936, 0.9345741824968681, 0.9388949965484622, 0.9386393270779536, 0.9441873545879886, 0.9484059008513793, 0.9497098151509729, 0.957328765372127, 0.9602689642829749, 0.9646664791757217, 0.9662004959987728, 0.9680413161864342, 0.9712883184618925, 0.9754045969370797, 0.9790606703653517, 0.9839695241991154, 0.9833047835757932, 0.9803134507708434, 0.9777567560657582, 0.982997980211183, 0.9817196328586404, 0.9829468463170813, 0.9819753023291489, 0.98230767264081, 0.9807736558177588, 0.977603354383453, 0.97361491064352, 0.9716973896147061, 0.9696008999565362, 0.968936159333214, 0.9662771968399253, 0.9662771968399253, 0.9599877278654156, 0.9542095978319229, 0.9562549535959911, 0.9563827883312453, 0.9513460997622274, 0.9464883798225654, 0.9463605450873112, 0.9418607624063611, 0.9320941886329354, 0.933372535985478, 0.9278500754224938, 0.9266995628052054, 0.9207680310894076, 0.9191828803722547, 0.9188249431135428, 0.912203103827372, 0.9084958965049983, 0.9030757037302176, 0.9002889065016746, 0.8934369646920461, 0.8897553243167233, 0.8872241965586889, 0.8857924475238412, 0.882877815560044, 0.880269986960857, 0.8768695830030936, 0.8731879426277708, 0.8733157773630251, 0.8663104338710914, 0.8617339503489888, 0.8601999335259377, 0.859100554802751, 0.8578222074502083, 0.853194590034004, 0.8496919182880373, 0.8451410017129855, 0.8433513154194258, 0.8388259657914249, 0.8353488609925089, 0.8350676245749495, 0.8338915450106102, 0.8346585534221359, 0.8359880346687802, 0.8392350369442385, 0.8371641142331194, 0.8371129803390177, 0.840027612302815, 0.8388515327384757, 0.8345562856339325, 0.8327410323933219, 0.8292894945414568, 0.835323294045458, 0.8314882519878302, 0.8315649528289827, 0.8290593920179992, 0.8345818525809833, 0.8333546391225424, 0.8313604172525759, 0.8309769130468131, 0.828727021706338, 0.8269629023598292, 0.8322808273464065, 0.8339682458517629, 0.8349653567867461, 0.8328433001815253, 0.8319740239817963, 0.8283946513946769, 0.82908495896505, 0.8323063942934574, 0.8319484570347455, 0.8333546391225424, 0.8336103085930509, 0.8353744279395597, 0.8340705136399662, 0.8366016413980006, 0.836013601615831, 0.8387492649502722, 0.839311737785391, 0.8400020453557641, 0.8381867921151536, 0.8423542044844425, 0.843658118784036, 0.8435047171017309, 0.8404366834556286, 0.8414593613376626, 0.8419707002786797, 0.8429678112136629, 0.8407179198731879, 0.8397719428323064, 0.840896888502544, 0.8402577148262727, 0.8428655434254596, 0.8423542044844425, 0.8414849282847136, 0.839490706414747, 0.8399509114616623, 0.8421241019609849, 0.8435558509958326, 0.8441950246721039, 0.8457801753892568, 0.8468539871653926, 0.8468284202183417, 0.8476976964180707, 0.8467517193771892, 0.8460614118068162, 0.8469818219006469, 0.8469306880065451, 0.8468284202183417, 0.8469051210594943, 0.8471607905300028, 0.847314192212308, 0.847135223582952, 0.8475698616828164, 0.847135223582952, 0.8471096566359011, 0.847467593894613, 0.8481323345179352, 0.8478510981003758];

const RenderLightVectorModal: React.FC<{}> = () => {
    const {
        file,
        rotation,
        lightDirection
    } = useControls();

    const [isRendering, setRendering] = useState<boolean>(false);
    const [lightCurveData, setLightCurveData] = useState<LightCurveData | null>(null)
    const [hasError, setHasError] = useState<boolean>(false);

    const onRenderLightModal = () => {
        setRendering(true);
        setHasError(false);

        if (file) {

            // Load STL file
            fetch(file)
                .then((data) => data.blob())
                .then((stlBlob) => {
                    const body = new FormData();
                    body.set('stl_file', stlBlob);
                    body.set('light_pol', String(lightDirection.polar));
                    body.set('light_azi', String(lightDirection.azimuth));
                    body.set('rot_axis_pol', String(rotation.polar));
                    body.set('rot_axis_azi', String(rotation.azimuth));

                    // Obtain data from endpoint
                    return fetch(LIGHT_CURVE_ENDPOINT, {
                            method: "POST",
                            body: body
                        });
                    }
                )
                .then((response) => {
                    console.log(response);

                    return response;
                })
                .then((data) => data.text())
                .then((data) => JSON.parse(data))
                .then((data: LightCurveData) => {
                    console.log(data);

                    setLightCurveData(data);
                })
                .catch((e) => {
                    console.error('error getting light curve data', e);
                    setHasError(true);
                })
                .finally(() => {
                    setRendering(false);
                })
        }
    }

    return (
        <>
            <Modal
                title="Render light curve"
                initialPosition={[document.body.clientWidth - 310, 10]}
                height={50}
                width={300}
            >
                <button className="render-light-curve-button" onClick={() => onRenderLightModal()} disabled={isRendering}>
                    {hasError ?
                        'Error retrieving curve, please try again' :
                        'Send STL to server'
                    }
                </button>
            </Modal>
            {
                lightCurveData && lightCurveData.curve && <LightCurveModal {...lightCurveData} />
            }
        </>
    )
}

export { RenderLightVectorModal };
